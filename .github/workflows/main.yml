name: Java CI with Maven
on:
 push:
  branches: [main]
jobs:
 builds:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Build Java package
      run: mvn clean install -f Javarepo1/pom.xml
 # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      working-directory: Javarepo1  # adjust this as needed
      run: mvn com.github.ferstl:depgraph-maven-plugin:4.0.1:graph
    #  with:
     #    working-directory: ./Javarepo1
      #uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    - name: Debug SSH connection
      run: ssh -vvv -p ${{ secrets.PORT }} ${{ secrets.USER }}@${{ secrets.HOST }} echo "SSH OK"
    - name: scp ssh pipelines
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
       host: ${{ secrets.HOST }}
       user: ${{ secrets.USERNAME }}
       pass: ${{ secrets.PASSWORD }}
       port: ${{ secrets.PORT }}
       connect_timeout: 60s
       scp: |
        ./target/*.war => /tmp/
       last_ssh: |
        ls -lart /tmp
    - name: Invoke Jenkins Deployment Job
      uses: appleboy/jenkins-action@master
      with:
       url: "http://13.235.50.208:8080"
       user: "admin"
       token: ${{ secrets.JENKINS_TOKEN }}
       job: "Continuousdeployment"   
    - name: SonarCloud Scan
      run: mvn sonar:sonar -f Javarepo1/pom.xml -Dsonar.projectKey=renuka12171 -Dsonar.organization=renuka12171 -Dsonar.branch.name=main -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=c88489b230bcedbfdf66a45ef3d607188203e3a6
